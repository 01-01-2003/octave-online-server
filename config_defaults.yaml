# Copyright Â© 2018, Octave Online LLC
#
# This file is part of Octave Online Server.
#
# Octave Online Server is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at your
# option) any later version.
#
# Octave Online Server is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Octave Online Server.  If not, see
# <https://www.gnu.org/licenses/>.


#############
# IMPORTANT #
#############
#
# This file contains default configurations for Octave Online.
#
# Do NOT edit this file directly, unless you are making a contribution to
# Octave Online Server and wish to change these defaults for all users.
#
# To make custom local configurations, create a file "config.yaml" in this
# directory and add the keys you want to override into that file.
#


# # # # # # # # # # # # #
# Common configurations #
# # # # # # # # # # # # #

# Redis connection info
redis:
  hostname: localhost
  port: 6379
  options:
    auth_pass: xxxxxxxxx

  # RATE LIMITING
  # Most keys added to Redis will have an expiration and an interval to touch the expiration. Setting these too low may overload Redis with expiration touch requests.
  # maxPayload determines when a message is too big to be sent over the main pub-sub pipe; a special client will be opened to receive the message. This makes that message slightly slower but clears up the pipe for other messages. This is most often used when transmitting large amounts of data like plot images.
  expire:
    interval: 5000
    timeout: 16000
  maxPayload: 10000

# MongoDB connection info
mongo:
  hostname: localhost
  port: 27019
  db: oo

# Mailgun connection info
mailgun:
  api_key: xxxxxxxxx
  domain: localhost

# # # # # # # # # # # # # # # #
# Back Server configurations  #
# # # # # # # # # # # # # # # #

# Runtime details for the back server worker process
worker:

  # LOGGING
  # The log directory should exist and be writeable by the server process.
  # "token" is the name of the worker written at the top of the log file.
  logDir: /srv/logs
  token: local
  monitorLogs:
    subdir: monitor
  sessionLogs:
    subdir: sessions
    depth: 3

  # SESSION QUEUE AGGRESSIVENESS
  # How frequently to check the queue for new jobs (ms).
  # When maxSessions is reached, don't get any more from the queue.
  clockInterval:
    min: 1500
    max: 2500
  maxSessions: 12

  # PERMISSIONS
  # uid to use for file ownership; set this to the uid of the user running Octave.
  uid: 1000

# Octave session settings
session:

  # COMMAND AND SESSION TIMEOUTS
  # All times are in milliseconds.
  # legalTime is the amount of time initially given to commands; different values for guests and signed-in users.
  legalTime:
    guest: 5000
    user: 10000
  # countdownExtraTime is how much time to add when the user clicks the "Add __ Seconds" button near the timeout.
  # countdownRequestTime determines when to show the "Add ___ Seconds" button, based on the amount of time left on the clock.
  # countdownRequestTimeBuffer is how much sooner the server should allow extra-time requests; this is in order to prevent race conditions if the client-side and server-side clocks are slightly out of sync.
  countdownExtraTime: 15000
  countdownRequestTime: 3000
  countdownRequestTimeBuffer: 1000
  # timeoutTime is the amount of time a session is allowed to be idle before it is terminated by the server due to inactivity.
  # timewarnTime is when to display the warning message in timewarnMessage that the session will be terminated soon.
  timeoutTime: 120000
  timewarnTime: 90000
  timewarnMessage: 'NOTICE: Due to inactivity, your session will expire in five minutes.'

  # DATA SIZE LIMITS
  # All data sizes are in bytes.
  # payloadLimit is the number of bytes in command output before the command is paused; this prevents large amounts of data clogging the messaging pipeline and also reduces bandwidth for the user, possibly also preventing their browser from freezing. Different values for guests and signed-in users.
  payloadLimit:
    guest: 5000
    user: 10000
  # payloadMessageDelay is how much time to wait before allowing the user to restart the process; this is primarily to allow the buffer to flush before displaying the restart message.
  # payloadAcknowledgeDelay is how much time the user is given to restart the process.
  payloadMessageDelay: 100
  payloadAcknowledgeDelay: 5000
  # textFileSizeLimit is the maximum number of bytes per file to transmit for editing to the client.  This is in place for the same reason as payloadLimit.
  textFileSizeLimit: 50000
  # jsonMaxMessageLength is a hard ceiling on the amount of data that the GNU Octave process can send per message to the Octave Online session host process.  This sometimes manifests itself in errors involving plot images that are oversize.
  jsonMaxMessageLength: 1000000

  # URLREAD DOMAIN WHITELISTING
  # For security, all HTTP requests from Octave processes (e.g., via the function urlread) are blocked by Octave Online Server by default.  This whitelist determines regular expression patterns to match against domain names to allow requests to those domains to pass through.
  urlreadPatterns:
    - ^example\.com$
    - ^(.*\.)?coursera\.org$

  # OCTAVE SESSION HOST IMPLEMENTATION
  # Choices: "selinux" or "docker".
  # Refer to the README file for more details.
  implementation: docker

# Session pool settings
sessionManager:
  # How often to log the currently active sessions (ms) and check command lag time.
  logInterval: 60000
  # How many sessions to keep in the pool: sessions without an owner that are pre-allocated so that when a user joins, a session is ready for them.
  poolSize: 2
  # How long to wait between creating sessions (ms), for rate limiting.
  poolInterval: 5000
  # Maximum time that a session can use to start up (ms); above this, the session will be destroyed before it reaches the pool.
  startupTimeLimit: 30000

# Server auto-maintenance settings
# Maintenance is designed for when multiple back servers are in a cluster; one of the servers in the cluster can take itself offline and perform maintenance, like cleaning up caches or doing a system reboot.
maintenance:
  interval: 1800000
  requestInterval: 5000
  responseWaitTime: 3000
  pauseDuration: 15000
  maxNodesInMaintenance: 1

# Git file server settings
git:
  # Hostname for the git file server; the user running the process should have SSH access to the Git repositories.  You may need to do SSH configurations outside of Octave Online Server for this to work.
  hostname: localhost
  # Author as shown in commit messages.
  author:
    name: Octave Online Server
    email: localhost@localhost
  # User on the Git server with permissions to create new repositories.
  helperUser: git
  # Time limit for committing to Git; if the time limit is exceeded, the commit is aborted.
  commitTimeLimit: 30000
  # Interval (in ms) for committing without the user having to request; behaves like an "auto-save" where changes to script files are persisted to the Git server.
  autoCommitInterval: 300000

# Docker implementation settings
docker:
  cwd: /home/oo
  gitdir: /srv/git
  cpuShares: 512
  memoryShares: 256m
  diskQuotaKiB: 20480
  images:
    filesystemSuffix: files
    octaveSuffix: 'octave:prod'

# SELinux implementation settings
selinux:
  cgroup:
    name: oo/octave
    cpuShares: 128
    cpuQuota: 800000
    uid: oo
    gid: oo
  prlimit:
    addressSpace: 1000000000

# # # # # # # # # # # # # # # #
# Front Server configurations #
# # # # # # # # # # # # # # # #

# Authentication settings
auth:
  google:
    oauth_key: xxxxxxxxx.apps.googleusercontent.com
    oauth_secret: xxxxxxxxx
  easy:
    secret: xxxxxxxxx
  password:
    salt_rounds: 10

# Front server settings
front:
  # SERVER HOST SETTINGS
  # protocol, hostname, and port are the *publicly-visible* URLs to be used for links, redirects, etc.
  protocol: http
  hostname: localhost
  port: 8080
  # listen_port is the port where the Node process should attach.  This might be different than the publicly-visible port if there is a proxy or other middleware.
  listen_port: 8080
  # static_path is the directory to serve; should be either the "app" (debug) or "dist" (production) directory of the oo-client project.
  static_path: ../oo-client/dist

  # COOKIE SETTINGS
  # For the primary Octave Online Server session ID; there may be other cookies set on the client side, like those used to dismiss onboarding boxes.
  # Please set a custom cookie secret!
  cookie:
    name: oo.sid
    secret: xxxxxxxxx
    max_age: 7889231400

# Operational Transformation settings
# These are timeouts (in seconds) that control the lifecycle of OT operations in Redis, used for shared workspaces.
ot:
  operation_expire: 120
  stats_interval: 60
  document_expire:
    interval: 120
    timeout: 86400

# # # # # # # # # # # # #
# Client configurations #
# # # # # # # # # # # # #

client:
  # THEME COLLECTION
  # Choices: "server", "official", or some other theme collection that you create manually.
  # To avoid confusing the end user, do not use the theme collection "official" unless you are running on octave-online.net.
  theme_collection: server

  # FRONTEND OPTIONS
  # Title and meta-tag description to use.
  title: Octave Online Server
  description: The power of Octave Online run on custom hardware. Used under the AGPL license.
  # Theme color; should be consistent with color1 in fire.styl
  theme_color: AD928E
  # A name substituted in various places in index.html
  app_name: Octave Online Server
  # Whether to show the splash screen and other onboarding bubbles to help new users learn how to use the software.
  onboarding: false

  # OTHER CLIENT OPTIONS
  # Application identifier for Google Analytics
  gacode: xxxxxxxxx
  # Application identifier for UserVoice
  uservoice: xxxxxxxxx

